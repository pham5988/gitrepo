pipeline {
	agent any
	tools {
		maven "MAVEN3"
		jdk "OpenJDK8"
	}

	stages {
		stage('Fetch code') {
			steps {
				git branch: 'vp-rem', url: 'https://github.com/devopshydclub/vprofile-project.git'
			}
		}
		stage('Build') {
			steps {
				sh 'mvn install -DskipTests'
			}
			post {
				success {
					echo 'Now Archiving...'
					archiveArtifacts artifacts: 'target/*.war'
				}
			}
		}
		stage('Test') {
			steps {
				sh 'mvn test'
			}
		}
		stage('Checkstyle Analysis') {
			steps {
				sh 'mvn checkstyle:checkstyle'
			}
		}
		stage('Sonar Analysis') {
			environment {
				scannerHome = tool 'sonar4.7'
			}
			steps {
				withSonarQubeEnv('sonar') {
					sh "${scannerHome}/bin/sonar-scanner \
						-Dsonar.projectKey=vprofile \
						-Dsonar.projectName=vprofile \
						-Dsonar.projectVersion=1.0 \
						-Dsonar.sources=src/ \
						-Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
						-Dsonar.junit.reportsPath=target/surefire-reports/ \
						-Dsonar.jacoco.reportsPath=target/jacoco.exec \
						-Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml"
				}
			}
		}
		stage('Quality Gate') {
			steps {
				timeout(time: 1, unit: 'HOURS') {
					waitForQualityGate abortPipeline: true
				}
			}
		}
		stage('Upload Artifacts') {
			steps {
				nexusArtifactUploader(
			        nexusVersion: 'nexus3',
			        protocol: 'http',
			        nexusUrl: '54.81.251.216:8081',
			        groupId: 'QA',
			        version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
			        repository: 'vprofile-repo',
			        credentialsId: 'nexuslogin',
			        artifacts: [
			            [artifactId: 'vproapp',
			             classifier: '',
			             file: 'target/vprofile-v2.war',
			             type: 'war']
			        ]
			    )
			}
		}
	}
}
