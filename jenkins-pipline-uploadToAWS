pipeline{
	agent any
	tools {
		maven "MAVEN3"
		jdk "OpenJDK8"
	}
	//Khi su dung docker pipeline, can thu thap thong tin ECR login credential, phai cung cap cac prefix sau
	environment{
		registryCredential = 'ecr:us-east-1:awscreds'
		appRegistry = '346513472718.dkr.ecr.us-east-1.amazonaws.com/vprofileappimg'
		vprofileRegistry = 'https://346513472718.dkr.ecr.us-east-1.amazonaws.com/'

		//bien cho AWS ECS
		cluster = "vprofile"
		service = "vprofilesvc"
	}


	stages {
		stage ('Fetch Code'){
			steps {
				git branch: 'docker', url: 'https://github.com/devopshydclub/vprofile-project.git'
			}
		}
		stage ('Test'){
			steps{
				sh 'mvn test'
			}
		}
		stage ('Checkstyle'){
			steps {
				sh 'mvn checkstyle:checkstyle'
			}
		}
		stage ('Build App Image') {
			steps {
				script {
					dockerImage = docker.build (appRegistry + ":$BUILD_NUMBER", "./Docker-files/app/multistage")
					//appRegistry: bien khai bao trong environment
					//BUILD_NUMBER: la bien global cua Jenkins
					//Docker-files: location file cau hinh docker image
				}
			}
		}
		stage ('Upload Docker Image') {
			steps {
				script {
					//thong tin dang nhap AWS ECR va push docker image len ECR
					docker.withRegistry(vprofileRegistry, registryCredential) {
						dockerImage.push("$BUILD_NUMBER")
						dockerImage.push("latest")
					}
				}
			}
		}
		stage ('Deploy to ECS') {
			steps{
				withAWS(credentials: 'awscreds', region: 'us-east-1') {
					sh 'aws ecs update-service --cluster ${cluster} --service ${service} --force-new-deployment'
				}
			}
		}
	}
}
